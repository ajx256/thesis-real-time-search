%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.41.0 (http://poppler.freedesktop.org)
%%Creator: matplotlib 2.2.2, http://matplotlib.org
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 662 504
%%HiResBoundingBox: 0 0 661.315625 503.23875
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_14_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-1021 -463 1794 1233] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 26 dict def
CharProcs begin
/C {
698 0 56 -13 644 742 setcachedevice
q
644 673 m
644 569 l
610 599 575 622 537 638 c
499 653 460 661 418 661 c
334 661 270 635 226 584 c
182 533 160 460 160 364 c
160 268 182 194 226 143 c
270 92 334 67 418 67 c
460 67 499 74 537 90 c
575 105 610 128 644 159 c
644 56 l
609 32 572 15 534 4 c
496 -7 455 -13 412 -13 c
302 -13 215 20 151 87 c
87 154 56 246 56 364 c
56 481 87 573 151 641 c
215 708 302 742 412 742 c
456 742 497 736 535 725 c
573 713 610 696 644 673 c
f
Q
} def
/D {
770 0 98 0 711 729 setcachedevice
q
197 648 m
197 81 l
316 81 l
416 81 490 103 537 149 c
583 195 607 267 607 365 c
607 463 583 534 537 580 c
490 625 416 648 316 648 c
197 648 l
98 729 m
301 729 l
442 729 546 699 612 641 c
678 582 711 490 711 365 c
711 239 677 147 611 88 c
545 29 441 0 301 0 c
98 0 l
98 729 l
f
Q
} def
/P {
603 0 98 0 569 729 setcachedevice
q
197 648 m
197 374 l
321 374 l
367 374 402 385 427 409 c
452 433 465 467 465 511 c
465 555 452 588 427 612 c
402 636 367 648 321 648 c
197 648 l
98 729 m
321 729 l
402 729 464 710 506 673 c
548 636 569 582 569 511 c
569 439 548 384 506 348 c
464 311 402 293 321 293 c
197 293 l
197 0 l
98 0 l
98 729 l
f
Q
} def
/a {
613 0 60 -13 522 560 setcachedevice
q
343 275 m
270 275 220 266 192 250 c
164 233 150 205 150 165 c
150 133 160 107 181 89 c
202 70 231 61 267 61 c
317 61 357 78 387 114 c
417 149 432 196 432 255 c
432 275 l
343 275 l
522 312 m
522 0 l
432 0 l
432 83 l
411 49 385 25 355 10 c
325 -5 287 -13 243 -13 c
187 -13 142 2 109 33 c
76 64 60 106 60 159 c
60 220 80 266 122 298 c
163 329 224 345 306 345 c
432 345 l
432 354 l
432 395 418 427 391 450 c
364 472 326 484 277 484 c
245 484 215 480 185 472 c
155 464 127 453 100 439 c
100 522 l
132 534 164 544 195 550 c
226 556 256 560 286 560 c
365 560 424 539 463 498 c
502 457 522 395 522 312 c
f
Q
} def
/b {
635 0 91 -13 580 760 setcachedevice
q
487 273 m
487 339 473 390 446 428 c
418 466 381 485 334 485 c
286 485 249 466 222 428 c
194 390 181 339 181 273 c
181 207 194 155 222 117 c
249 79 286 61 334 61 c
381 61 418 79 446 117 c
473 155 487 207 487 273 c
181 464 m
199 496 223 520 252 536 c
281 552 316 560 356 560 c
422 560 476 533 518 481 c
559 428 580 359 580 273 c
580 187 559 117 518 65 c
476 13 422 -13 356 -13 c
316 -13 281 -5 252 10 c
223 25 199 49 181 82 c
181 0 l
91 0 l
91 760 l
181 760 l
181 464 l
f
Q
} def
/e {
615 0 55 -13 562 560 setcachedevice
q
562 296 m
562 252 l
149 252 l
153 190 171 142 205 110 c
238 78 284 62 344 62 c
378 62 412 66 444 74 c
476 82 509 95 541 113 c
541 28 l
509 14 476 3 442 -3 c
408 -9 373 -13 339 -13 c
251 -13 182 12 131 62 c
80 112 55 181 55 268 c
55 357 79 428 127 481 c
175 533 241 560 323 560 c
397 560 455 536 498 489 c
540 441 562 377 562 296 c
472 322 m
471 371 457 410 431 440 c
404 469 368 484 324 484 c
274 484 234 469 204 441 c
174 413 156 373 152 322 c
472 322 l
f
Q
} def
/eight {
636 0 68 -13 568 742 setcachedevice
q
318 346 m
271 346 234 333 207 308 c
180 283 167 249 167 205 c
167 161 180 126 207 101 c
234 76 271 64 318 64 c
364 64 401 76 428 102 c
455 127 469 161 469 205 c
469 249 455 283 429 308 c
402 333 365 346 318 346 c
219 388 m
177 398 144 418 120 447 c
96 476 85 511 85 553 c
85 611 105 657 147 691 c
188 725 245 742 318 742 c
390 742 447 725 489 691 c
530 657 551 611 551 553 c
551 511 539 476 515 447 c
491 418 459 398 417 388 c
464 377 501 355 528 323 c
554 291 568 251 568 205 c
568 134 546 80 503 43 c
459 5 398 -13 318 -13 c
237 -13 175 5 132 43 c
89 80 68 134 68 205 c
68 251 81 291 108 323 c
134 355 171 377 219 388 c
183 544 m
183 506 194 476 218 455 c
242 434 275 424 318 424 c
360 424 393 434 417 455 c
441 476 453 506 453 544 c
453 582 441 611 417 632 c
393 653 360 664 318 664 c
275 664 242 653 218 632 c
194 611 183 582 183 544 c
f
Q
} def
/four {
636 0 49 0 580 729 setcachedevice
q
378 643 m
129 254 l
378 254 l
378 643 l
352 729 m
476 729 l
476 254 l
580 254 l
580 172 l
476 172 l
476 0 l
378 0 l
378 172 l
49 172 l
49 267 l
352 729 l
f
Q
} def
/h {
634 0 91 0 549 760 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 760 l
181 760 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
f
Q
} def
/i {
278 0 94 0 184 760 setcachedevice
q
94 547 m
184 547 l
184 0 l
94 0 l
94 547 l
94 760 m
184 760 l
184 646 l
94 646 l
94 760 l
f
Q
} def
/l {
278 0 94 0 184 760 setcachedevice
q
94 0 90 760 re
f
Q
} def
/m {
974 0 91 0 889 560 setcachedevice
q
520 442 m
542 482 569 511 600 531 c
631 550 668 560 711 560 c
767 560 811 540 842 500 c
873 460 889 403 889 330 c
889 0 l
799 0 l
799 327 l
799 379 789 418 771 444 c
752 469 724 482 686 482 c
639 482 602 466 575 435 c
548 404 535 362 535 309 c
535 0 l
445 0 l
445 327 l
445 379 435 418 417 444 c
398 469 369 482 331 482 c
285 482 248 466 221 435 c
194 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
201 495 226 520 255 536 c
283 552 317 560 357 560 c
397 560 430 550 458 530 c
486 510 506 480 520 442 c
f
Q
} def
/n {
634 0 91 0 549 560 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
f
Q
} def
/o {
612 0 55 -13 557 560 setcachedevice
q
306 484 m
258 484 220 465 192 427 c
164 389 150 338 150 273 c
150 207 163 156 191 118 c
219 80 257 62 306 62 c
354 62 392 80 420 118 c
448 156 462 207 462 273 c
462 337 448 389 420 427 c
392 465 354 484 306 484 c
306 560 m
384 560 445 534 490 484 c
534 433 557 363 557 273 c
557 183 534 113 490 63 c
445 12 384 -13 306 -13 c
227 -13 165 12 121 63 c
77 113 55 183 55 273 c
55 363 77 433 121 484 c
165 534 227 560 306 560 c
f
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
124 83 m
285 83 l
285 639 l
110 604 l
110 694 l
284 729 l
383 729 l
383 83 l
544 83 l
544 0 l
124 0 l
124 83 l
f
Q
} def
/p {
635 0 91 -207 580 560 setcachedevice
q
181 82 m
181 -207 l
91 -207 l
91 547 l
181 547 l
181 464 l
199 496 223 520 252 536 c
281 552 316 560 356 560 c
422 560 476 533 518 481 c
559 428 580 359 580 273 c
580 187 559 117 518 65 c
476 13 422 -13 356 -13 c
316 -13 281 -5 252 10 c
223 25 199 49 181 82 c
487 273 m
487 339 473 390 446 428 c
418 466 381 485 334 485 c
286 485 249 466 222 428 c
194 390 181 339 181 273 c
181 207 194 155 222 117 c
249 79 286 61 334 61 c
381 61 418 79 446 117 c
473 155 487 207 487 273 c
f
Q
} def
/period {
318 0 107 0 210 124 setcachedevice
q
107 0 103 124 re
f
Q
} def
/r {
411 0 91 0 411 560 setcachedevice
q
411 463 m
401 469 390 473 378 476 c
366 478 353 480 339 480 c
288 480 249 463 222 430 c
194 397 181 350 181 288 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
199 495 224 520 254 536 c
284 552 321 560 365 560 c
371 560 378 559 386 559 c
393 558 401 557 411 555 c
411 463 l
f
Q
} def
/s {
521 0 54 -13 472 560 setcachedevice
q
443 531 m
443 446 l
417 458 391 468 364 475 c
336 481 308 485 279 485 c
234 485 200 478 178 464 c
156 450 145 430 145 403 c
145 382 153 366 169 354 c
185 342 217 330 265 320 c
296 313 l
360 299 405 279 432 255 c
458 230 472 195 472 151 c
472 100 452 60 412 31 c
372 1 316 -13 246 -13 c
216 -13 186 -10 154 -5 c
122 0 89 8 54 20 c
54 113 l
87 95 120 82 152 74 c
184 65 216 61 248 61 c
290 61 323 68 346 82 c
368 96 380 117 380 144 c
380 168 371 187 355 200 c
339 213 303 226 247 238 c
216 245 l
160 257 119 275 95 299 c
70 323 58 356 58 399 c
58 450 76 490 112 518 c
148 546 200 560 268 560 c
301 560 332 557 362 552 c
391 547 418 540 443 531 c
f
Q
} def
/six {
636 0 70 -13 573 742 setcachedevice
q
330 404 m
286 404 251 388 225 358 c
199 328 186 286 186 234 c
186 181 199 139 225 109 c
251 79 286 64 330 64 c
374 64 409 79 435 109 c
461 139 474 181 474 234 c
474 286 461 328 435 358 c
409 388 374 404 330 404 c
526 713 m
526 623 l
501 635 476 644 451 650 c
425 656 400 659 376 659 c
310 659 260 637 226 593 c
192 549 172 482 168 394 c
187 422 211 444 240 459 c
269 474 301 482 336 482 c
409 482 467 459 509 415 c
551 371 573 310 573 234 c
573 159 550 99 506 54 c
462 9 403 -13 330 -13 c
246 -13 181 19 137 83 c
92 147 70 241 70 364 c
70 479 97 571 152 639 c
206 707 280 742 372 742 c
396 742 421 739 447 735 c
472 730 498 723 526 713 c
f
Q
} def
/space {
318 0 0 0 0 0 setcachedevice
q
Q
} def
/t {
392 0 27 0 368 702 setcachedevice
q
183 702 m
183 547 l
368 547 l
368 477 l
183 477 l
183 180 l
183 135 189 106 201 94 c
213 81 238 75 276 75 c
368 75 l
368 0 l
276 0 l
206 0 158 13 132 39 c
106 65 93 112 93 180 c
93 477 l
27 477 l
27 547 l
93 547 l
93 702 l
183 702 l
f
Q
} def
/two {
636 0 73 0 536 742 setcachedevice
q
192 83 m
536 83 l
536 0 l
73 0 l
73 83 l
110 121 161 173 226 239 c
290 304 331 346 348 365 c
380 400 402 430 414 455 c
426 479 433 504 433 528 c
433 566 419 598 392 622 c
365 646 330 659 286 659 c
255 659 222 653 188 643 c
154 632 117 616 78 594 c
78 694 l
118 710 155 722 189 730 c
223 738 255 742 284 742 c
359 742 419 723 464 685 c
509 647 532 597 532 534 c
532 504 526 475 515 449 c
504 422 484 390 454 354 c
446 344 420 317 376 272 c
332 227 271 164 192 83 c
f
Q
} def
/x {
592 0 29 0 559 547 setcachedevice
q
549 547 m
351 281 l
559 0 l
453 0 l
294 215 l
135 0 l
29 0 l
241 286 l
47 547 l
153 547 l
298 352 l
443 547 l
549 547 l
f
Q
} def
/y {
592 0 30 -207 562 547 setcachedevice
q
322 -50 m
296 -114 271 -157 247 -177 c
223 -197 191 -207 151 -207 c
79 -207 l
79 -132 l
132 -132 l
156 -132 175 -126 189 -114 c
203 -102 218 -75 235 -31 c
251 9 l
30 547 l
125 547 l
296 119 l
467 547 l
562 547 l
322 -50 l
f
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
318 664 m
267 664 229 639 203 589 c
177 539 165 464 165 364 c
165 264 177 189 203 139 c
229 89 267 64 318 64 c
369 64 407 89 433 139 c
458 189 471 264 471 364 c
471 464 458 539 433 589 c
407 639 369 664 318 664 c
318 742 m
399 742 461 709 505 645 c
548 580 570 486 570 364 c
570 241 548 147 505 83 c
461 19 399 -13 318 -13 c
236 -13 173 19 130 83 c
87 147 66 241 66 364 c
66 486 87 580 130 645 c
173 709 236 742 318 742 c
f
Q
} def
end
currentdict end
/T3_14_0 exch definefont pop
%%EndResource
/F14_0 /T3_14_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 661.315625 503.23875 re
W
q
1 j
/DeviceGray {} cs
[1] sc
0 j
0 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
0 0 661.315625 503.23875 re
f
/DeviceRGB {} cs
[0.9176 0.9176 0.949] sc
/DeviceGray {} CS
[0] SC
/DeviceRGB {} cs
[0.9176 0.9176 0.949] sc
47.515625 40.046875 613.8 443.52 re
f
q
47.515625 40.046875 613.8 443.52 re
W
1 J
1 j
1 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
76.817635 40.046875 m
76.817635 483.566875 l
S
Q
q
/DeviceGray {} cs
[0.15] sc
1 j
1 w
[] 0 d
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
67.27076 23.921875 Td
/F14_0 12 Tf
(0.0)
[7.632
0
3.816
0
7.632
0] Tj
Q
q
47.515625 40.046875 613.8 443.52 re
W
1 J
1 j
1 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
188.978439 40.046875 m
188.978439 483.566875 l
S
Q
q
/DeviceGray {} cs
[0.15] sc
1 j
1 w
[] 0 d
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
179.431564 23.921875 Td
/F14_0 12 Tf
(0.2)
[7.632
0
3.816
0
7.632
0] Tj
Q
q
47.515625 40.046875 613.8 443.52 re
W
1 J
1 j
1 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
301.139243 40.046875 m
301.139243 483.566875 l
S
Q
q
/DeviceGray {} cs
[0.15] sc
1 j
1 w
[] 0 d
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
291.592368 23.921875 Td
/F14_0 12 Tf
(0.4)
[7.632
0
3.816
0
7.632
0] Tj
Q
q
47.515625 40.046875 613.8 443.52 re
W
1 J
1 j
1 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
413.300047 40.046875 m
413.300047 483.566875 l
S
Q
q
/DeviceGray {} cs
[0.15] sc
1 j
1 w
[] 0 d
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
403.753172 23.921875 Td
/F14_0 12 Tf
(0.6)
[7.632
0
3.816
0
7.632
0] Tj
Q
q
47.515625 40.046875 613.8 443.52 re
W
1 J
1 j
1 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
525.460851 40.046875 m
525.460851 483.566875 l
S
Q
q
/DeviceGray {} cs
[0.15] sc
1 j
1 w
[] 0 d
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
515.913976 23.921875 Td
/F14_0 12 Tf
(0.8)
[7.632
0
3.816
0
7.632
0] Tj
Q
q
47.515625 40.046875 613.8 443.52 re
W
1 J
1 j
1 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
637.621655 40.046875 m
637.621655 483.566875 l
S
Q
q
/DeviceGray {} cs
[0.15] sc
1 j
1 w
[] 0 d
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
628.07478 23.921875 Td
/F14_0 12 Tf
(1.0)
[7.632
0
3.816
0
7.632
0] Tj
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
311.36875 3.75 Td
/F14_0 18 Tf
(Path Cost)
[10.854
0
11.034
0
7.056
0
11.412
0
5.724
0
12.564
0
11.016
0
9.378
0
7.056
0] Tj
Q
q
47.515625 40.046875 613.8 443.52 re
W
1 J
1 j
1 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
47.515625 40.046875 m
661.315625 40.046875 l
S
Q
q
/DeviceGray {} cs
[0.15] sc
1 j
1 w
[] 0 d
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
21.421875 35.484375 Td
/F14_0 12 Tf
(0.0)
[7.632
0
3.816
0
7.632
0] Tj
Q
q
47.515625 40.046875 613.8 443.52 re
W
1 J
1 j
1 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
47.515625 124.526875 m
661.315625 124.526875 l
S
Q
q
/DeviceGray {} cs
[0.15] sc
1 j
1 w
[] 0 d
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
21.421875 119.964375 Td
/F14_0 12 Tf
(0.2)
[7.632
0
3.816
0
7.632
0] Tj
Q
q
47.515625 40.046875 613.8 443.52 re
W
1 J
1 j
1 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
47.515625 209.006875 m
661.315625 209.006875 l
S
Q
q
/DeviceGray {} cs
[0.15] sc
1 j
1 w
[] 0 d
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
21.421875 204.444375 Td
/F14_0 12 Tf
(0.4)
[7.632
0
3.816
0
7.632
0] Tj
Q
q
47.515625 40.046875 613.8 443.52 re
W
1 J
1 j
1 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
47.515625 293.486875 m
661.315625 293.486875 l
S
Q
q
/DeviceGray {} cs
[0.15] sc
1 j
1 w
[] 0 d
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
21.421875 288.924375 Td
/F14_0 12 Tf
(0.6)
[7.632
0
3.816
0
7.632
0] Tj
Q
q
47.515625 40.046875 613.8 443.52 re
W
1 J
1 j
1 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
47.515625 377.966875 m
661.315625 377.966875 l
S
Q
q
/DeviceGray {} cs
[0.15] sc
1 j
1 w
[] 0 d
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
21.421875 373.404375 Td
/F14_0 12 Tf
(0.8)
[7.632
0
3.816
0
7.632
0] Tj
Q
q
47.515625 40.046875 613.8 443.52 re
W
1 J
1 j
1 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
47.515625 462.446875 m
661.315625 462.446875 l
S
Q
q
/DeviceGray {} cs
[0.15] sc
1 j
1 w
[] 0 d
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
21.421875 457.884375 Td
/F14_0 12 Tf
(1.0)
[7.632
0
3.816
0
7.632
0] Tj
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 13.671875 227.588125] Tm
0 0 Td
0 0 Td
/F14_0 18 Tf
(Density)
[13.86
0
11.07
0
11.412
0
9.378
0
5.004
0
7.056
0
10.656
0] Tj
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
75.415625 40.046875 2.80402 8.40576 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
81.023665 40.046875 2.80402 16.72704 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
86.631705 40.046875 2.804021 24.96384 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
92.239746 40.046875 2.80402 33.11616 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
97.847786 40.046875 2.80402 41.184 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
103.455826 40.046875 2.80402 49.16736 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
109.063866 40.046875 2.80402 57.06624 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
114.671906 40.046875 2.804021 64.88064 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
120.279947 40.046875 2.80402 72.61056 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
125.887987 40.046875 2.80402 80.256 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
131.496027 40.046875 2.80402 87.81696 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
137.104067 40.046875 2.80402 95.29344 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
142.712107 40.046875 2.804021 102.68544 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
148.320148 40.046875 2.80402 109.99296 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
153.928188 40.046875 2.80402 117.216 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
159.536228 40.046875 2.80402 124.35456 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
165.144268 40.046875 2.80402 131.40864 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
170.752308 40.046875 2.804021 138.37824 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
176.360349 40.046875 2.80402 145.26336 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
181.968389 40.046875 2.80402 152.064 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
187.576429 40.046875 2.80402 158.78016 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
193.184469 40.046875 2.80402 165.41184 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
198.792509 40.046875 2.804021 171.95904 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
204.40055 40.046875 2.80402 178.42176 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
210.00859 40.046875 2.80402 184.8 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
215.61663 40.046875 2.80402 191.09376 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
221.22467 40.046875 2.80402 197.30304 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
226.83271 40.046875 2.804021 203.42784 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
232.440751 40.046875 2.80402 209.46816 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
238.048791 40.046875 2.80402 215.424 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
243.656831 40.046875 2.80402 221.29536 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
249.264871 40.046875 2.80402 227.08224 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
254.872911 40.046875 2.804021 232.78464 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
260.480952 40.046875 2.80402 238.40256 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
266.088992 40.046875 2.80402 243.936 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
271.697032 40.046875 2.80402 249.38496 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
277.305072 40.046875 2.80402 254.74944 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
282.913112 40.046875 2.804021 260.02944 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
288.521153 40.046875 2.80402 265.22496 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
294.129193 40.046875 2.80402 270.336 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
299.737233 40.046875 2.80402 275.36256 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
305.345273 40.046875 2.80402 280.30464 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
310.953313 40.046875 2.804021 285.16224 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
316.561354 40.046875 2.80402 289.93536 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
322.169394 40.046875 2.80402 294.624 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
327.777434 40.046875 2.80402 299.22816 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
333.385474 40.046875 2.80402 303.74784 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
338.993514 40.046875 2.804021 308.18304 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
344.601555 40.046875 2.80402 312.53376 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
350.209595 40.046875 2.80402 316.8 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
355.817635 40.046875 2.80402 320.98176 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
361.425675 40.046875 2.80402 325.07904 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
367.033715 40.046875 2.804021 329.09184 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
372.641756 40.046875 2.80402 333.02016 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
378.249796 40.046875 2.80402 336.864 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
383.857836 40.046875 2.80402 340.62336 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
389.465876 40.046875 2.80402 344.29824 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
395.073916 40.046875 2.804021 347.88864 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
400.681957 40.046875 2.80402 351.39456 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
406.289997 40.046875 2.80402 354.816 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
411.898037 40.046875 2.80402 358.15296 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
417.506077 40.046875 2.80402 361.40544 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
423.114117 40.046875 2.804021 364.57344 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
428.722158 40.046875 2.80402 367.65696 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
434.330198 40.046875 2.80402 370.656 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
439.938238 40.046875 2.80402 373.57056 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
445.546278 40.046875 2.80402 376.40064 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
451.154318 40.046875 2.804021 379.14624 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
456.762359 40.046875 2.80402 381.80736 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
462.370399 40.046875 2.80402 384.384 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
467.978439 40.046875 2.80402 386.87616 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
473.586479 40.046875 2.80402 389.28384 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
479.194519 40.046875 2.804021 391.60704 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
484.80256 40.046875 2.80402 393.84576 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
490.4106 40.046875 2.80402 396 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
496.01864 40.046875 2.80402 398.06976 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
501.62668 40.046875 2.80402 400.05504 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
507.23472 40.046875 2.804021 401.95584 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
512.842761 40.046875 2.80402 403.77216 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
518.450801 40.046875 2.80402 405.504 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
524.058841 40.046875 2.80402 407.15136 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
529.666881 40.046875 2.80402 408.71424 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
535.274921 40.046875 2.804021 410.19264 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
540.882962 40.046875 2.80402 411.58656 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
546.491002 40.046875 2.80402 412.896 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
552.099042 40.046875 2.80402 414.12096 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
557.707082 40.046875 2.80402 415.26144 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
563.315122 40.046875 2.804021 416.31744 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
568.923163 40.046875 2.80402 417.28896 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
574.531203 40.046875 2.80402 418.176 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
580.139243 40.046875 2.80402 418.97856 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
585.747283 40.046875 2.80402 419.69664 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
591.355323 40.046875 2.804021 420.33024 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
596.963364 40.046875 2.80402 420.87936 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
602.571404 40.046875 2.80402 421.344 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
608.179444 40.046875 2.80402 421.72416 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
613.787484 40.046875 2.80402 422.01984 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
619.395524 40.046875 2.804021 422.23104 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
625.003565 40.046875 2.80402 422.35776 re
f
Q
q
47.515625 40.046875 613.8 443.52 re
W
/DeviceRGB {} cs
[0 0 1] sc
/DeviceRGB {} cs
[0 0 1] sc
630.611605 40.046875 2.80402 422.4 re
f
Q
q
2 J
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
0 J
/DeviceGray {} cs
[0] sc
1 j
1 w
[] 0 d
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
174.9625 489.566875 Td
/F14_0 18 Tf
(Probability that Complete Path Cost is x)
[10.854
0
7.398
0
11.016
0
11.43
0
11.034
0
11.43
0
5.004
0
5.004
0
5.004
0
7.056
0
10.656
0
5.724
0
7.056
0
11.412
0
11.034
0
7.056
0
5.724
0
12.564
0
11.016
0
17.532
0
11.43
0
5.004
0
11.07
0
7.056
0
11.07
0
5.724
0
10.854
0
11.034
0
7.056
0
11.412
0
5.724
0
12.564
0
11.016
0
9.378
0
7.056
0
5.724
0
5.004
0
9.378
0
5.724
0
10.656
0] Tj
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_14_0
%%EOF
